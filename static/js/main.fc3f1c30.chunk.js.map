{"version":3,"sources":["store/Store.tsx","components/Header/Header.tsx","assets/img/fox.svg","assets/img/mouse.svg","assets/img/panda.svg","assets/img/penguin.svg","assets/img/giraffe.svg","assets/img/hare.svg","assets/img/bear.svg","assets/img/camel.svg","assets/img/crab.svg","assets/img/pig.svg","assets/img/turtle.svg","assets/img/tiger.svg","assets/img/battleship.svg","assets/img/cat.svg","assets/img/dog.svg","assets/img/elephant.svg","assets/img/raccoon.svg","assets/img/sloth.svg","common/cardsImg.tsx","components/Card/Card.tsx","components/Main/Main.tsx","components/Registration/Registration.tsx","components/Welcome/Welcome.tsx","components/History/History.tsx","components/Page/Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["name","histoty","accessToken","makeAutoObservable","this","autoBind","_this","storedJson","localStorage","getItem","set","JSON","parse","autorun","value","toJS","setItem","stringify","autoSave","text","result","concat","Header","props","useStopwatch","autoStart","seconds","minutes","start","pause","reset","useEffect","getTimer","Store","getHistoty","Box","display","justifyContent","pl","pr","pt","pb","className","Typography","alignItems","Button","variant","color","onClick","onRunRestertGame","arrImages","label","img","Fox","id","uuidv4","Mouse","Panda","Penguin","Giraffe","Hare","Bear","Сamel","Сrab","Pig","Turtle","Tiger","Battleship","Cat","Dog","Elephant","Raccoon","Sloth","Card","isFlipped","flippedClass","mt","mx","src","alt","width","Main","useState","flipped","setFlipped","values","setValues","setCounter","lastChoice","setLastChoice","currentChoice","setCurrentChoice","currentlyFlipped","setCurrentlyFlipped","makeRandomArr","Math","random","sort","timer","restertGame","setTimeout","clearTimeout","interval","setInterval","_counter","clearInterval","length","flip","onStopTimer","onCheckHistoryGame","filter","f","p","flexWrap","map","includes","handleOnCardClick","Registration","open","setOpen","inputText","setInputText","handleClickOpen","createUser","getName","onCheckSwitchModalWindow","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","type","fullWidth","onInput","event","target","onKeyPress","key","preventDefault","DialogActions","Welcome","React","setName","handleClose","onRunTimer","History","historyResult","setHistoryResult","a","b","openHistoryGame","fullScreen","AppBar","Toolbar","IconButton","edge","List","index","ListItem","ListItemText","primary","floor","Divider","Page","modalWindow","setModalWindow","historyGame","setHistoryGame","switchModalWindow","getSwitchModalWindow","seTimer","setRestertGame","setOpenHistoryGame","runTimer","checkSwitchModalWindow","checkHistoryGame","runRestertGame","maxWidth","Link","href","App","StylesProvider","injectFirst","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc3f1c30.chunk.js","sourcesContent":["import { makeAutoObservable, autorun, set, toJS } from 'mobx';\n\n// eslint-disable-next-line\nexport function autoSave(_this: any, name: string) {\n  const storedJson = localStorage.getItem(name);\n  if (storedJson) {\n    set(_this, JSON.parse(storedJson));\n  }\n  autorun(() => {\n    const value = toJS(_this);\n    localStorage.setItem(name, JSON.stringify(value));\n  });\n}\n// window.localStorage.clear();\nclass Store {\n  name: string = '';\n\n  histoty: Array<number> = [];\n\n  public accessToken: string;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n    this.accessToken = '';\n    autoSave(this, 'authStore');\n  }\n\n  getName(text: string) {\n    this.name = text;\n  }\n\n  getHistoty(result: number) {\n    this.histoty = this.histoty.concat(result);\n  }\n}\n\nexport default new Store();\n","import React, { useEffect } from 'react';\nimport { Box, Typography, Button } from '@material-ui/core/';\nimport { useStopwatch } from 'react-timer-hook';\nimport Store from '../../store/Store';\n\nimport './Header.scss';\n\ninterface IHeader {\n  getTimer: string;\n  onRunRestertGame(value: boolean): void;\n}\n\nconst Header: React.FC<IHeader> = (props) => {\n  const { seconds, minutes, start, pause, reset } = useStopwatch({\n    autoStart: false,\n  });\n\n  useEffect(() => {\n    if (props.getTimer === 'start') start();\n    if (props.getTimer === 'stop') {\n      Store.getHistoty(minutes * 60 + seconds);\n      pause();\n    }\n    if (props.getTimer === 'reset') reset();\n  }, [props.getTimer]);\n\n  const restertGame = () => {\n    props.onRunRestertGame(true);\n    reset();\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      pl={4}\n      pr={4}\n      pt={2}\n      pb={2}\n      className=\"header-block\"\n    >\n      <Typography className=\"logo\">Memory game</Typography>\n      <Box display=\"flex\" alignItems=\"center\" className=\"stopwatch\">\n        {minutes} : {seconds}\n      </Box>\n\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          restertGame();\n        }}\n      >\n        Restart\n      </Button>\n    </Box>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/fox.4c13be4a.svg\";","export default __webpack_public_path__ + \"static/media/mouse.f3239556.svg\";","export default __webpack_public_path__ + \"static/media/panda.bf1e07ce.svg\";","export default __webpack_public_path__ + \"static/media/penguin.28a6c7fe.svg\";","export default __webpack_public_path__ + \"static/media/giraffe.5b06f41a.svg\";","export default __webpack_public_path__ + \"static/media/hare.31cbdde7.svg\";","export default __webpack_public_path__ + \"static/media/bear.2a1821b9.svg\";","export default __webpack_public_path__ + \"static/media/camel.f628f5f2.svg\";","export default __webpack_public_path__ + \"static/media/crab.080f60ad.svg\";","export default __webpack_public_path__ + \"static/media/pig.a089e089.svg\";","export default __webpack_public_path__ + \"static/media/turtle.0710488d.svg\";","export default __webpack_public_path__ + \"static/media/tiger.ec08f237.svg\";","export default __webpack_public_path__ + \"static/media/battleship.d7f07a99.svg\";","export default __webpack_public_path__ + \"static/media/cat.43ecf4be.svg\";","export default __webpack_public_path__ + \"static/media/dog.cb011b99.svg\";","export default __webpack_public_path__ + \"static/media/elephant.b30b177a.svg\";","export default __webpack_public_path__ + \"static/media/raccoon.c3bdf204.svg\";","export default __webpack_public_path__ + \"static/media/sloth.e28b4a64.svg\";","import { v4 as uuidv4 } from 'uuid';\nimport { ICardBody } from './interfaces';\n\nimport Fox from '../assets/img/fox.svg';\nimport Mouse from '../assets/img/mouse.svg';\nimport Panda from '../assets/img/panda.svg';\nimport Penguin from '../assets/img/penguin.svg';\nimport Giraffe from '../assets/img/giraffe.svg';\nimport Hare from '../assets/img/hare.svg';\nimport Bear from '../assets/img/bear.svg';\nimport Сamel from '../assets/img/camel.svg';\nimport Сrab from '../assets/img/crab.svg';\nimport Pig from '../assets/img/pig.svg';\nimport Turtle from '../assets/img/turtle.svg';\nimport Tiger from '../assets/img/tiger.svg';\nimport Battleship from '../assets/img/battleship.svg';\nimport Cat from '../assets/img/cat.svg';\nimport Dog from '../assets/img/dog.svg';\nimport Elephant from '../assets/img/elephant.svg';\nimport Raccoon from '../assets/img/raccoon.svg';\nimport Sloth from '../assets/img/sloth.svg';\n\nexport const arrImages: Array<ICardBody> = [\n  {\n    label: 'Fox',\n    img: Fox,\n    id: uuidv4(),\n  },\n  {\n    label: 'Fox',\n    img: Fox,\n    id: uuidv4(),\n  },\n  {\n    label: 'Mouse',\n    img: Mouse,\n    id: uuidv4(),\n  },\n  {\n    label: 'Mouse',\n    img: Mouse,\n    id: uuidv4(),\n  },\n  {\n    label: 'Panda',\n    img: Panda,\n    id: uuidv4(),\n  },\n  {\n    label: 'Panda',\n    img: Panda,\n    id: uuidv4(),\n  },\n  {\n    label: 'Penguin',\n    img: Penguin,\n    id: uuidv4(),\n  },\n  {\n    label: 'Penguin',\n    img: Penguin,\n    id: uuidv4(),\n  },\n  {\n    label: 'Giraffe',\n    img: Giraffe,\n    id: uuidv4(),\n  },\n  {\n    label: 'Giraffe',\n    img: Giraffe,\n    id: uuidv4(),\n  },\n  {\n    label: 'Hare',\n    img: Hare,\n    id: uuidv4(),\n  },\n  {\n    label: 'Hare',\n    img: Hare,\n    id: uuidv4(),\n  },\n  {\n    label: 'Bear',\n    img: Bear,\n    id: uuidv4(),\n  },\n  {\n    label: 'Bear',\n    img: Bear,\n    id: uuidv4(),\n  },\n  {\n    label: 'Сamel',\n    img: Сamel,\n    id: uuidv4(),\n  },\n  {\n    label: 'Сamel',\n    img: Сamel,\n    id: uuidv4(),\n  },\n  {\n    label: 'Сrab',\n    img: Сrab,\n    id: uuidv4(),\n  },\n  {\n    label: 'Сrab',\n    img: Сrab,\n    id: uuidv4(),\n  },\n  {\n    label: 'Pig',\n    img: Pig,\n    id: uuidv4(),\n  },\n  {\n    label: 'Pig',\n    img: Pig,\n    id: uuidv4(),\n  },\n  {\n    label: 'Turtle',\n    img: Turtle,\n    id: uuidv4(),\n  },\n  {\n    label: 'Turtle',\n    img: Turtle,\n    id: uuidv4(),\n  },\n  {\n    label: 'Tiger',\n    img: Tiger,\n    id: uuidv4(),\n  },\n  {\n    label: 'Tiger',\n    img: Tiger,\n    id: uuidv4(),\n  },\n  {\n    label: 'Battleship',\n    img: Battleship,\n    id: uuidv4(),\n  },\n  {\n    label: 'Battleship',\n    img: Battleship,\n    id: uuidv4(),\n  },\n  {\n    label: 'Cat',\n    img: Cat,\n    id: uuidv4(),\n  },\n  {\n    label: 'Cat',\n    img: Cat,\n    id: uuidv4(),\n  },\n  {\n    label: 'Dog',\n    img: Dog,\n    id: uuidv4(),\n  },\n  {\n    label: 'Dog',\n    img: Dog,\n    id: uuidv4(),\n  },\n  {\n    label: 'Elephant',\n    img: Elephant,\n    id: uuidv4(),\n  },\n  {\n    label: 'Elephant',\n    img: Elephant,\n    id: uuidv4(),\n  },\n  {\n    label: 'Raccoon',\n    img: Raccoon,\n    id: uuidv4(),\n  },\n  {\n    label: 'Raccoon',\n    img: Raccoon,\n    id: uuidv4(),\n  },\n  {\n    label: 'Sloth',\n    img: Sloth,\n    id: uuidv4(),\n  },\n  {\n    label: 'Sloth',\n    img: Sloth,\n    id: uuidv4(),\n  },\n];\n","import React from 'react';\nimport { Box } from '@material-ui/core/';\nimport './Card.scss';\n\nimport { ICardBody } from '../../common/interfaces';\n\ninterface IProps {\n  isFlipped: boolean;\n  // eslint-disable-next-line\n  onClick: any;\n  value: ICardBody;\n}\n\nconst Card: React.FC<IProps> = ({ isFlipped, onClick, value }) => {\n  const flippedClass = isFlipped ? ' flipped' : '';\n  return (\n    <Box mt={2} mx={1} className=\"animal-card\" onClick={onClick}>\n      <Box className={`card-inner${flippedClass}`}>\n        <Box className=\"card-front\" />\n        <Box className=\"card-back\">\n          <img src={value.img} alt=\"elem-name\" width=\"100\" />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { Box } from '@material-ui/core/';\nimport { arrImages } from '../../common/cardsImg';\nimport { ICardBody } from '../../common/interfaces';\nimport Card from '../Card/Card';\n\nimport './Main.scss';\n\ninterface IMain {\n  onStopTimer(text: string): void;\n  restertGame: boolean;\n  onRunRestertGame(value: boolean): void;\n  onCheckHistoryGame(value: boolean): void;\n}\n\nconst Main: React.FC<IMain> = (props) => {\n  const [flipped, setFlipped] = useState<string[]>([]);\n  const [values, setValues] = useState<ICardBody[]>([]);\n  const [counter, setCounter] = useState(0);\n  const [lastChoice, setLastChoice] = useState<ICardBody | null>(null);\n  const [currentChoice, setCurrentChoice] = useState<ICardBody | null>(null);\n  const [currentlyFlipped, setCurrentlyFlipped] = useState<number>(0);\n  const makeRandomArr = () => Math.random() - 0.5;\n\n  useEffect(() => {\n    setValues([...arrImages].sort(makeRandomArr));\n  }, []);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (props.restertGame) {\n      timer = setTimeout(() => {\n        setFlipped([]);\n        setLastChoice(null);\n        setCurrentChoice(null);\n        setCurrentlyFlipped(0);\n        props.onRunRestertGame(false);\n        setValues([...arrImages].sort(makeRandomArr));\n      }, 500);\n    }\n    return () => clearTimeout(timer);\n  }, [props.restertGame]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter((_counter) => _counter + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (flipped.length) {\n      if (lastChoice !== null) {\n        setCurrentlyFlipped((flip) => flip + 1);\n        if (lastChoice.label === currentChoice?.label) {\n          if (flipped.length === arrImages.length) {\n            props.onStopTimer('stop');\n            props.onCheckHistoryGame(true);\n            timer = setTimeout(() => {\n              setFlipped([]);\n              setLastChoice(null);\n              setCurrentChoice(null);\n              setCurrentlyFlipped(0);\n              setValues([...arrImages].sort(makeRandomArr));\n              props.onRunRestertGame(false);\n              props.onCheckHistoryGame(false);\n            }, 500);\n          }\n          setLastChoice(null);\n          setCurrentChoice(null);\n          setCurrentlyFlipped(0);\n        } else {\n          timer = setTimeout(() => {\n            setFlipped(\n              flipped.filter(\n                (f) => f !== currentChoice?.id && f !== lastChoice?.id\n              )\n            );\n            setLastChoice(null);\n            setCurrentChoice(null);\n            setCurrentlyFlipped(0);\n          }, 1000);\n        }\n      } else {\n        setLastChoice(currentChoice);\n        setCurrentlyFlipped((flip) => flip + 1);\n      }\n    }\n    return () => clearTimeout(timer);\n  }, [flipped]);\n\n  const handleOnCardClick = (value: ICardBody) => {\n    if (currentlyFlipped >= 2 || flipped.includes(value.id)) {\n      return null;\n    }\n    setCurrentChoice(value);\n    return setFlipped(() => [...flipped, value.id]);\n  };\n\n  return (\n    <Box\n      mx=\"auto\"\n      p={4}\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"space-around\"\n      className=\"main-block cards\"\n    >\n      {values.map((value) => (\n        <Card\n          key={value.id}\n          value={value}\n          onClick={() => handleOnCardClick(value)}\n          isFlipped={flipped.includes(value.id)}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport './Registration.scss';\nimport Store from '../../store/Store';\n\ninterface IRegistration {\n  onCheckSwitchModalWindow(text: string): void;\n}\n\nconst Registration: React.FC<IRegistration> = (props) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [inputText, setInputText] = useState<string>(Store.name);\n\n  useEffect(() => {\n    if (Store.name.length === 0) handleClickOpen();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(event.target.value);\n  };\n\n  const createUser = () => {\n    Store.getName(inputText);\n    props.onCheckSwitchModalWindow(inputText);\n    setOpen(false);\n  };\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      createUser();\n      event.preventDefault();\n    }\n  };\n\n  return (\n    <Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Registration new User.</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter your name or nickname.</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name or Nickname\"\n            type=\"text\"\n            fullWidth\n            className=\"modal-window\"\n            onInput={changeInput}\n            onKeyPress={keyPressHandler}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={createUser} color=\"primary\">\n            Register\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Registration;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@material-ui/core';\nimport './Welcome.scss';\nimport Store from '../../store/Store';\n\ninterface IWelcome {\n  onRunTimer(text: string): void;\n}\n\nconst Welcome: React.FC<IWelcome> = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = useState<string>(Store.name);\n\n  useEffect(() => {\n    setName(Store.name);\n  }, []);\n\n  useEffect(() => {\n    if (Store.name.length !== 0) setOpen(true);\n  }, []);\n\n  const handleClose = () => {\n    props.onRunTimer('start');\n    setOpen(false);\n  };\n\n  return (\n    <Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Welcome {name}.</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            The game \"Memory\" is a field on which cards with pictures are\n            located. The cards are in random order, and each of them is\n            represented on the field 2 times. Initially, the cards are closed\n            and can be opened by clicking the mouse. Only two cards can be\n            opened at a time (not counting the pairs already found), so the\n            location of the pictures must be remembered. If the open symbols\n            match, the found pairs remain on the field in an open form. The goal\n            of the game is to consistently open the entire field. Are you ready?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Start the game\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Box,\n  Button,\n  Dialog,\n  ListItemText,\n  ListItem,\n  List,\n  Divider,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n} from '@material-ui/core/';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './History.scss';\nimport Store from '../../store/Store';\n\ninterface IHistory {\n  onRunTimer(text: string): void;\n  onCheckHistoryGame(value: boolean): void;\n  openHistoryGame: boolean;\n}\n\nconst History: React.FC<IHistory> = (props) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [historyResult, setHistoryResult] = useState<Array<number>>(\n    Store.histoty\n  );\n\n  useEffect(() => {\n    setHistoryResult(Store.histoty.sort((a: number, b: number) => a - b));\n  }, [Store.histoty]);\n\n  useEffect(() => {\n    if (props.openHistoryGame) handleClickOpen();\n  }, [props.openHistoryGame]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    props.onCheckHistoryGame(false);\n    props.onRunTimer('reset');\n    setOpen(false);\n  };\n\n  return (\n    <Box>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n        Open game result\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose}>\n        <AppBar className=\"app-bar header-block\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n              className=\"color-text-headr\"\n            >\n              <CloseIcon className=\"color-text-headr\" />\n            </IconButton>\n            <Typography variant=\"h6\" className=\"title\">\n              Results table\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              Close\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          {historyResult.map((value: number, index: number) => (\n            <Box key={uuidv4()}>\n              <ListItem>\n                <ListItemText\n                  primary={`${index + 1} result -  ${Math.floor(value / 60)}: ${\n                    value % 60\n                  }`}\n                />\n              </ListItem>\n              <Divider />\n            </Box>\n          ))}\n        </List>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default History;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Link } from '@material-ui/core';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Registration from '../Registration/Registration';\nimport Welcome from '../Welcome/Welcome';\nimport History from '../History/History';\nimport Store from '../../store/Store';\nimport './Page.scss';\n\ninterface IPage {}\n\nconst Page: React.FC<IPage> = (props) => {\n  // eslint-disable-next-line\n  const [modalWindow, setModalWindow] = useState<any>([]);\n  // eslint-disable-next-line\n  const [historyGame, setHistoryGame] = useState<any>([]);\n  const [switchModalWindow, getSwitchModalWindow] = useState<string>('');\n  const [timer, seTimer] = useState<string>('pause');\n  const [restertGame, setRestertGame] = useState<boolean>(false);\n  const [openHistoryGame, setOpenHistoryGame] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (Store.name.length !== 0) {\n      setModalWindow(<Welcome onRunTimer={runTimer} />);\n    } else {\n      setModalWindow(\n        <Registration onCheckSwitchModalWindow={checkSwitchModalWindow} />\n      );\n    }\n  }, [switchModalWindow]);\n\n  useEffect(() => {\n    setHistoryGame(\n      <History\n        onRunTimer={runTimer}\n        onCheckHistoryGame={checkHistoryGame}\n        openHistoryGame={openHistoryGame}\n      />\n    );\n  }, [openHistoryGame]);\n\n  const checkSwitchModalWindow = (text: string) => {\n    getSwitchModalWindow(text);\n  };\n\n  const checkHistoryGame = (value: boolean) => {\n    setOpenHistoryGame(value);\n  };\n\n  const runTimer = (text: string) => {\n    seTimer(text);\n  };\n  const runRestertGame = (value: boolean) => {\n    setRestertGame(value);\n  };\n\n  return (\n    <Box maxWidth=\"1920px\" mx=\"auto\">\n      <Header getTimer={timer} onRunRestertGame={runRestertGame} />\n      <Main\n        onStopTimer={runTimer}\n        restertGame={restertGame}\n        onRunRestertGame={runRestertGame}\n        onCheckHistoryGame={checkHistoryGame}\n      />\n      {modalWindow}\n      <Box\n        className=\"header-block \"\n        pl={4}\n        pr={4}\n        pt={2}\n        pb={2}\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Link\n          href=\"https://github.com/LexSava/memory-game\"\n          color=\"inherit\"\n          target=\"_blank\"\n        >\n          App GitHub\n        </Link>\n        {historyGame}\n      </Box>\n    </Box>\n  );\n};\nexport default Page;\n","import React from 'react';\nimport { StylesProvider } from '@material-ui/core';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Page from './components/Page/Page';\nimport './App.scss';\n\ninterface IApp {}\n\nconst App: React.FC<IApp> = () => (\n  <StylesProvider injectFirst>\n    <HashRouter>\n      <Route exact path=\"/\" component={Page} />\n    </HashRouter>\n  </StylesProvider>\n);\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}